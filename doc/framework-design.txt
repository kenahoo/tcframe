                         Design Doc for TCFrame

TCFrame is an application framework for classification.  It is
designed primarily for document classification, but should function
well on other types of data since it doesn't care what its tokens
represent.


package TCFrame
# The class should provide methods that describe a complete
# experiment: collection, method, parameters used in the training...

Methods:
	clean;
	backup;
	describe;


package TCFrame::Classifier
# Type of learning classifier
# All classifiers should conform to the AI::Categorize interface.


package TCFrame::Classifier::NNet
# Neural Nets, at this point just a wraper to previous work.  Needs to be
# adapted to AI::Categorize model.

Attributes:
	MOMENTUM = 0.5;
	EPOCHS =	5;
	N = 		500;
	HIDDEN=	50; (Number of hidden units)
	SAVE = 	0;
	COR = 		"signalg";
	WT= 		"ntc";
	K=		50;
	THRES= 	500;
	CV = 		200;
	CVEXP = 	3;
	EXP 	=	$COR;
	ALPHA 	= 	0.9;

methods:
create_vec;
create_trn_nnt;
sub create_tst_nnt;
create_net;
train;
test;

package TCFrame::Classifier::NaiveBayes
# Naive Bayes
Attributes:
	features_kept => 0.2 (what portion of the features should be kept during feature selection)
	threshold => 0.3 (score threshold for category membership during categorization)

Methods:
	


package TCFrame::Collection
# Provides collection-wide utilities and data structures.
# A collection can also be called a "corpus".

Atributes:
	Description;
	DTD;
	Language;

Methods:
	parse(from,to);    # e.g. smart2xml, reuters2smart,...
	tfidf(tfidf-args); # use smart package, then replace
	feasel (fselargs); # feature selection method

package TCFrame::Collection::Document
# Document class

Methods:
	stopwords;
	stemming;
	


package TCFrame::Collection::Map
# Manages a mapping between categories & documents.  Can look up
# either by category or by document, so we use a double hash.
